[2016-04-28 02:36:51,460] TRACE Controller 1 epoch 76 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:51,983] ERROR Controller 1 epoch 76 encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":62,"isr":[1]}]. (state.change.logger)
[2016-04-28 02:36:51,983] ERROR Controller 1 epoch 76 initiated state change for partition [pipeline,2] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":62,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":62,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-28 02:36:51,985] TRACE Controller 1 epoch 76 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:51,990] ERROR Controller 1 epoch 76 encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":62,"isr":[1]}]. (state.change.logger)
[2016-04-28 02:36:51,991] ERROR Controller 1 epoch 76 initiated state change for partition [pipeline,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":62,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":62,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-28 02:36:52,024] TRACE Controller 1 epoch 77 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:52,043] ERROR Controller 1 epoch 77 initiated state change for partition [pipeline,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-28 02:36:52,045] TRACE Controller 1 epoch 77 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:52,059] ERROR Controller 1 epoch 77 initiated state change for partition [pipeline,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-28 02:36:52,061] TRACE Controller 1 epoch 77 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:52,077] ERROR Controller 1 epoch 77 initiated state change for partition [pipeline,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-28 02:36:52,982] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:36:52,982] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:36:52,982] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:36:52,983] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:36:52,983] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:36:52,983] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:36:52,985] TRACE Controller 1 epoch 77 changed state of replica 2 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:36:52,985] TRACE Controller 1 epoch 77 changed state of replica 2 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:36:52,985] TRACE Controller 1 epoch 77 changed state of replica 1 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:36:52,985] TRACE Controller 1 epoch 77 changed state of replica 1 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:36:52,985] TRACE Controller 1 epoch 77 changed state of replica 1 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:36:52,985] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 0 (state.change.logger)
[2016-04-28 02:36:52,985] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 0 (state.change.logger)
[2016-04-28 02:36:52,985] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 0 (state.change.logger)
[2016-04-28 02:36:52,986] TRACE Controller 1 epoch 77 changed state of replica 2 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:36:52,986] TRACE Controller 1 epoch 77 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:52,986] TRACE Controller 1 epoch 77 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:52,986] TRACE Controller 1 epoch 77 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:36:52,987] TRACE Controller 1 epoch 77 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:52,987] TRACE Controller 1 epoch 77 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:52,987] TRACE Controller 1 epoch 77 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:52,987] TRACE Controller 1 epoch 77 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:52,987] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:36:52,988] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:36:52,988] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:36:52,988] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:1,2) correlation id 1 from controller 1 epoch 77 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:52,988] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 1 epoch 77 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:52,988] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:36:52,988] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 1 epoch 77 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:52,989] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 77 for partition [pipeline,1] since its associated leader epoch 60 is old. Current leader epoch is 60 (state.change.logger)
[2016-04-28 02:36:52,989] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 77 for partition [pipeline,2] since its associated leader epoch 62 is old. Current leader epoch is 62 (state.change.logger)
[2016-04-28 02:36:52,989] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 77 for partition [pipeline,0] since its associated leader epoch 62 is old. Current leader epoch is 62 (state.change.logger)
[2016-04-28 02:36:52,989] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:36:52,989] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:36:52,989] TRACE Controller 1 epoch 77 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:36:52,989] TRACE Controller 1 epoch 77 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:36:52,989] TRACE Controller 1 epoch 77 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:52,989] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:60,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 2 (state.change.logger)
[2016-04-28 02:36:52,989] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 2 (state.change.logger)
[2016-04-28 02:36:52,989] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:62,ControllerEpoch:76),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 2 (state.change.logger)
[2016-04-28 02:36:52,990] TRACE Controller 1 epoch 77 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:36:52,991] TRACE Controller 1 epoch 77 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:36:52,992] TRACE Controller 1 epoch 77 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:36:53,003] TRACE Controller 1 epoch 77 elected leader 1 for Offline partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:53,003] TRACE Controller 1 epoch 77 changed partition [pipeline,1] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-28 02:36:53,004] TRACE Controller 1 epoch 77 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:53,009] TRACE Controller 1 epoch 77 elected leader 1 for Offline partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:53,009] TRACE Controller 1 epoch 77 changed partition [pipeline,2] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-28 02:36:53,009] TRACE Controller 1 epoch 77 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:53,014] TRACE Controller 1 epoch 77 elected leader 1 for Offline partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 changed partition [pipeline,0] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:61,ControllerEpoch:77) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:61,ControllerEpoch:77) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:61,ControllerEpoch:77) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:36:53,015] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:36:53,016] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:61,ControllerEpoch:77) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:36:53,016] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:36:53,016] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:36:53,017] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:61,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:1,2) correlation id 3 from controller 1 epoch 77 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:53,017] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 1 epoch 77 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:53,017] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 1 epoch 77 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:53,017] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 77 starting the become-leader transition for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:53,017] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 77 starting the become-leader transition for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:53,017] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 77 starting the become-leader transition for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:53,017] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 77 for partition [pipeline,2] since it is already the leader for the partition. (state.change.logger)
[2016-04-28 02:36:53,017] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 77 for partition [pipeline,0] since it is already the leader for the partition. (state.change.logger)
[2016-04-28 02:36:53,017] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 77 for partition [pipeline,1] since it is already the leader for the partition. (state.change.logger)
[2016-04-28 02:36:53,017] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 77 for the become-leader transition for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:53,018] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 77 for the become-leader transition for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:53,018] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 77 for the become-leader transition for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:36:53,018] TRACE Controller 1 epoch 77 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:36:53,018] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:61,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 4 (state.change.logger)
[2016-04-28 02:36:53,018] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 4 (state.change.logger)
[2016-04-28 02:36:53,018] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 4 (state.change.logger)
[2016-04-28 02:36:53,018] TRACE Controller 1 epoch 77 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:36:53,018] TRACE Controller 1 epoch 77 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:36:53,019] TRACE Controller 1 epoch 77 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:36:56,685] TRACE Controller 1 epoch 77 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:36:56,688] ERROR Controller 1 epoch 77 encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":63,"isr":[1]}]. (state.change.logger)
[2016-04-28 02:36:56,689] ERROR Controller 1 epoch 77 initiated state change for partition [pipeline,2] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":63,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":63,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-28 02:36:56,690] TRACE Controller 1 epoch 77 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:36:56,694] ERROR Controller 1 epoch 77 encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":63,"isr":[1]}]. (state.change.logger)
[2016-04-28 02:36:56,694] ERROR Controller 1 epoch 77 initiated state change for partition [pipeline,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":63,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":63,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-28 02:36:59,833] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:36:59,833] TRACE Controller 1 epoch 77 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:36:59,835] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 77 with correlation id 5 (state.change.logger)
[2016-04-28 02:36:59,835] TRACE Controller 1 epoch 77 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:36:59,835] TRACE Controller 1 epoch 77 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:52:31,205] TRACE Controller 1 epoch 78 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,210] ERROR Controller 1 epoch 78 initiated state change for partition [pipeline,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-28 02:52:31,210] TRACE Controller 1 epoch 78 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,214] ERROR Controller 1 epoch 78 initiated state change for partition [pipeline,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-28 02:52:31,215] TRACE Controller 1 epoch 78 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,218] ERROR Controller 1 epoch 78 initiated state change for partition [pipeline,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 changed state of replica 2 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 changed state of replica 2 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 0 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 changed state of replica 1 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 0 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 0 (state.change.logger)
[2016-04-28 02:52:31,316] TRACE Controller 1 epoch 78 changed state of replica 1 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 changed state of replica 1 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 changed state of replica 2 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:1,2) correlation id 1 from controller 1 epoch 78 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 1 epoch 78 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 1 epoch 78 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:52:31,317] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 78 for partition [pipeline,1] since its associated leader epoch 61 is old. Current leader epoch is 61 (state.change.logger)
[2016-04-28 02:52:31,317] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 78 for partition [pipeline,2] since its associated leader epoch 63 is old. Current leader epoch is 63 (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:52:31,317] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 78 for partition [pipeline,0] since its associated leader epoch 63 is old. Current leader epoch is 63 (state.change.logger)
[2016-04-28 02:52:31,317] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:52:31,318] TRACE Controller 1 epoch 78 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:52:31,318] TRACE Controller 1 epoch 78 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,318] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:61,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 2 (state.change.logger)
[2016-04-28 02:52:31,318] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 2 (state.change.logger)
[2016-04-28 02:52:31,318] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:63,ControllerEpoch:77),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 2 (state.change.logger)
[2016-04-28 02:52:31,318] TRACE Controller 1 epoch 78 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:52:31,319] TRACE Controller 1 epoch 78 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:52:31,320] TRACE Controller 1 epoch 78 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:52:31,320] TRACE Controller 1 epoch 78 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:52:31,321] TRACE Controller 1 epoch 78 elected leader 1 for Offline partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,321] TRACE Controller 1 epoch 78 changed partition [pipeline,1] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-28 02:52:31,321] TRACE Controller 1 epoch 78 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,325] TRACE Controller 1 epoch 78 elected leader 1 for Offline partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,325] TRACE Controller 1 epoch 78 changed partition [pipeline,2] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-28 02:52:31,325] TRACE Controller 1 epoch 78 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,327] TRACE Controller 1 epoch 78 elected leader 1 for Offline partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,327] TRACE Controller 1 epoch 78 changed partition [pipeline,0] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-28 02:52:31,327] TRACE Controller 1 epoch 78 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:62,ControllerEpoch:78) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,327] TRACE Controller 1 epoch 78 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:62,ControllerEpoch:78) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:62,ControllerEpoch:78) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:62,ControllerEpoch:78) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Controller 1 epoch 78 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:62,ControllerEpoch:78),ReplicationFactor:2),AllReplicas:1,2) correlation id 3 from controller 1 epoch 78 for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 1 epoch 78 for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 1 epoch 78 for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 78 starting the become-leader transition for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 78 starting the become-leader transition for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,328] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 78 starting the become-leader transition for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,328] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 78 for partition [pipeline,2] since it is already the leader for the partition. (state.change.logger)
[2016-04-28 02:52:31,328] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 78 for partition [pipeline,0] since it is already the leader for the partition. (state.change.logger)
[2016-04-28 02:52:31,329] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 78 for partition [pipeline,1] since it is already the leader for the partition. (state.change.logger)
[2016-04-28 02:52:31,329] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 78 for the become-leader transition for partition [pipeline,2] (state.change.logger)
[2016-04-28 02:52:31,329] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 78 for the become-leader transition for partition [pipeline,0] (state.change.logger)
[2016-04-28 02:52:31,329] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 78 for the become-leader transition for partition [pipeline,1] (state.change.logger)
[2016-04-28 02:52:31,329] TRACE Controller 1 epoch 78 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:52:31,329] TRACE Controller 1 epoch 78 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-28 02:52:31,329] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:62,ControllerEpoch:78),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 4 (state.change.logger)
[2016-04-28 02:52:31,329] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 4 (state.change.logger)
[2016-04-28 02:52:31,330] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:64,ControllerEpoch:78),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 78 with correlation id 4 (state.change.logger)
[2016-04-28 02:52:31,330] TRACE Controller 1 epoch 78 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-28 02:52:31,330] TRACE Controller 1 epoch 78 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
