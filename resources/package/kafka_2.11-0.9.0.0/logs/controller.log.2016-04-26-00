[2016-04-26 01:34:30,655] INFO [SessionExpirationListener on 1], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-26 01:34:30,656] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-04-26 01:34:30,656] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-26 01:34:30,656] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-26 01:34:30,656] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-26 01:34:30,657] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-26 01:34:30,657] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-26 01:34:30,657] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-26 01:34:30,659] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-26 01:34:30,659] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-26 01:34:30,659] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-26 01:34:30,659] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
[2016-04-26 01:34:31,149] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-26 01:34:31,149] INFO [Controller 1]: Initialized controller epoch to 15 and zk version 14 (kafka.controller.KafkaController)
[2016-04-26 01:34:31,150] INFO [Controller 1]: Controller 1 incremented epoch to 16 (kafka.controller.KafkaController)
[2016-04-26 01:34:31,150] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-26 01:34:31,159] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-26 01:34:31,159] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-26 01:34:31,159] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-26 01:34:31,159] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-26 01:34:31,159] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-26 01:34:31,159] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-26 01:34:31,160] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-26 01:34:31,160] INFO [Controller 1]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-26 01:34:31,160] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-26 01:34:31,160] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-26 01:34:31,160] INFO [Controller 1]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-26 01:34:31,160] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-26 01:34:31,163] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:31,165] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:31,168] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:31,168] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-26 01:34:31,168] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 16 (kafka.controller.KafkaController)
[2016-04-26 01:34:31,168] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-26 01:34:31,168] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-26 01:34:31,169] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-26 01:34:32,847] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-26 01:34:32,854] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer() for TopicAndPartitions:Set([pipeline,2], [pipeline,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-04-26 01:34:32,858] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 01:34:32,867] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 01:34:32,867] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-26 01:34:32,868] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-26 01:34:32,868] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-26 01:34:32,869] INFO [Controller 1]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-26 01:34:32,869] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-26 01:34:32,869] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-26 01:34:32,870] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-26 01:34:32,870] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-26 01:34:32,874] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:32,874] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":12,"isr":[1,2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:32,874] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:12,ControllerEpoch:16), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:13,ControllerEpoch:15), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:13,ControllerEpoch:15)) (kafka.controller.PartitionStateMachine)
[2016-04-26 01:34:32,876] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 2 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:32,876] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":14,"isr":[2,1]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:32,877] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:12,ControllerEpoch:16), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:14,ControllerEpoch:16), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:13,ControllerEpoch:15)) (kafka.controller.PartitionStateMachine)
[2016-04-26 01:34:32,878] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 2 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:32,878] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":14,"isr":[2,1]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 01:34:32,879] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:12,ControllerEpoch:16), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:14,ControllerEpoch:16), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:14,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-04-26 01:34:32,881] DEBUG [TopicChangeListener on Controller 1]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-26 01:34:32,881] INFO [TopicChangeListener on Controller 1]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-26 01:34:32,883] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-26 01:34:32,886] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-26 01:34:32,886] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 01:34:32,889] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 01:34:32,889] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
