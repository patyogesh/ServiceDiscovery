[2016-04-25 21:01:23,651] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-25 21:01:23,651] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-25 21:01:23,651] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:01:23,651] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:01:23,651] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:01:23,651] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:06:23,644] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-25 21:06:23,644] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-25 21:06:23,644] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:06:23,644] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:06:23,645] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:06:23,645] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:12:53,771] INFO [SessionExpirationListener on 1], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-25 21:12:54,154] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-04-25 21:12:54,154] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-25 21:12:54,158] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-25 21:12:54,158] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-25 21:12:54,162] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-25 21:12:54,163] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-25 21:12:54,163] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-25 21:12:54,164] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-25 21:12:54,164] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-25 21:12:54,164] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-25 21:12:54,165] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
[2016-04-25 21:12:54,168] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-25 21:12:54,170] INFO [Controller 1]: Initialized controller epoch to 11 and zk version 10 (kafka.controller.KafkaController)
[2016-04-25 21:12:54,173] INFO [Controller 1]: Controller 1 incremented epoch to 12 (kafka.controller.KafkaController)
[2016-04-25 21:12:54,174] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-25 21:12:54,191] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-25 21:12:54,191] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-25 21:12:54,191] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-25 21:12:54,192] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-25 21:12:54,192] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-25 21:12:54,192] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-25 21:12:54,192] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-25 21:12:54,192] INFO [Controller 1]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-25 21:12:54,193] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-25 21:12:54,193] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-25 21:12:54,193] INFO [Controller 1]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-25 21:12:54,193] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-25 21:12:54,198] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:54,206] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:54,249] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:54,250] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-25 21:12:54,250] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 12 (kafka.controller.KafkaController)
[2016-04-25 21:12:54,250] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-25 21:12:54,250] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-25 21:12:54,251] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-25 21:12:55,884] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-25 21:12:55,887] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer() for TopicAndPartitions:Set([pipeline,2]) (kafka.controller.IsrChangeNotificationListener)
[2016-04-25 21:12:55,889] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-25 21:12:55,896] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-25 21:12:55,896] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-25 21:12:55,897] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-25 21:12:55,897] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-25 21:12:55,897] INFO [Controller 1]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-25 21:12:55,897] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-25 21:12:55,898] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-25 21:12:55,898] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-25 21:12:55,898] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-25 21:12:55,904] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:55,904] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":8,"isr":[1,2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:55,905] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:12), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:9,ControllerEpoch:11), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:11)) (kafka.controller.PartitionStateMachine)
[2016-04-25 21:12:55,907] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 2 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:55,907] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":10,"isr":[2,1]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:55,908] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:12), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:10,ControllerEpoch:12), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:9,ControllerEpoch:11)) (kafka.controller.PartitionStateMachine)
[2016-04-25 21:12:55,911] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 2 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:55,911] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":10,"isr":[1,2]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:12:55,912] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:12), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:10,ControllerEpoch:12), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:12)) (kafka.controller.PartitionStateMachine)
[2016-04-25 21:12:55,915] DEBUG [TopicChangeListener on Controller 1]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-25 21:12:55,915] INFO [TopicChangeListener on Controller 1]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-25 21:12:55,919] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-25 21:12:55,922] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-25 21:12:55,922] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-25 21:12:55,925] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-25 21:12:55,925] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-25 21:12:58,993] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-25 21:12:58,993] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-25 21:12:58,993] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:12:58,993] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:12:58,993] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:12:58,994] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:37:49,471] INFO [SessionExpirationListener on 1], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-25 21:37:49,471] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-04-25 21:37:49,471] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-25 21:37:49,471] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-25 21:37:49,472] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-25 21:37:49,473] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-25 21:37:49,473] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-25 21:37:49,473] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-25 21:37:49,475] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-25 21:37:49,475] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-25 21:37:49,475] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-25 21:37:49,475] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
[2016-04-25 21:37:50,171] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-25 21:37:50,172] INFO [Controller 1]: Initialized controller epoch to 12 and zk version 11 (kafka.controller.KafkaController)
[2016-04-25 21:37:50,173] INFO [Controller 1]: Controller 1 incremented epoch to 13 (kafka.controller.KafkaController)
[2016-04-25 21:37:50,174] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-25 21:37:50,195] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-25 21:37:50,195] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-25 21:37:50,195] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Controller 1]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Controller 1]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-25 21:37:50,196] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-25 21:37:50,200] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:50,204] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:50,211] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:50,211] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-25 21:37:50,212] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 13 (kafka.controller.KafkaController)
[2016-04-25 21:37:50,212] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-25 21:37:50,212] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-25 21:37:50,212] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-25 21:37:51,717] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-25 21:37:51,717] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-25 21:37:51,724] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-25 21:37:51,724] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-25 21:37:51,725] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-25 21:37:51,725] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-25 21:37:51,726] INFO [Controller 1]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-25 21:37:51,726] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-25 21:37:51,727] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-25 21:37:51,727] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-25 21:37:51,727] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-25 21:37:51,731] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:51,731] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":9,"isr":[1,2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:51,732] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:13), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:10,ControllerEpoch:12), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:12)) (kafka.controller.PartitionStateMachine)
[2016-04-25 21:37:51,734] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 2 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:51,734] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":11,"isr":[2,1]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:51,735] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:13), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:11,ControllerEpoch:13), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:12)) (kafka.controller.PartitionStateMachine)
[2016-04-25 21:37:51,736] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 2 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:51,736] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":11,"isr":[1,2]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-25 21:37:51,736] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:13), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:11,ControllerEpoch:13), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:11,ControllerEpoch:13)) (kafka.controller.PartitionStateMachine)
[2016-04-25 21:37:51,738] DEBUG [TopicChangeListener on Controller 1]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-25 21:37:51,738] INFO [TopicChangeListener on Controller 1]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-25 21:37:51,740] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-25 21:37:51,742] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-25 21:37:51,746] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-25 21:37:55,215] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-25 21:37:55,215] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-25 21:37:55,215] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:37:55,215] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:37:55,215] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:37:55,215] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:42:56,216] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-25 21:42:56,216] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-25 21:42:56,216] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:42:56,216] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:42:56,216] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:42:56,216] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:47:56,210] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-25 21:47:56,211] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-25 21:47:56,211] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:47:56,211] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:47:56,211] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:47:56,211] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:52:56,200] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-25 21:52:56,200] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-25 21:52:56,201] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:52:56,201] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:52:56,201] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:52:56,201] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:57:56,192] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-25 21:57:56,193] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-25 21:57:56,193] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:57:56,193] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-25 21:57:56,193] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-25 21:57:56,193] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
