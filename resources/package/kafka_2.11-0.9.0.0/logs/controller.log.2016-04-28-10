[2016-04-28 11:06:59,159] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 11:06:59,160] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children  (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 11:06:59,160] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: , deleted brokers: , all live brokers:  (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 11:06:59,161] DEBUG [TopicChangeListener on Controller 2]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-28 11:06:59,161] INFO [TopicChangeListener on Controller 2]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-28 11:06:59,162] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 11:06:59,162] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 11:06:59,162] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 11:06:59,162] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 11:06:59,162] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 11:06:59,163] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-28 11:06:59,164] INFO [Controller 2]: Initialized controller epoch to 96 and zk version 95 (kafka.controller.KafkaController)
[2016-04-28 11:06:59,164] INFO [Controller 2]: Controller 2 incremented epoch to 97 (kafka.controller.KafkaController)
[2016-04-28 11:06:59,164] DEBUG [Controller 2]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Controller 2]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-28 11:06:59,169] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-28 11:06:59,171] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:06:59,173] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:06:59,175] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:06:59,175] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-28 11:06:59,175] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 97 (kafka.controller.KafkaController)
[2016-04-28 11:06:59,175] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-28 11:06:59,175] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-28 11:06:59,176] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-28 11:06:59,176] INFO [AddPartitionsListener on 2]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-28 11:06:59,178] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children  (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 11:06:59,178] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: , deleted brokers: , all live brokers:  (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 11:06:59,178] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 11:06:59,178] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 11:06:59,178] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 11:06:59,178] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 11:06:59,178] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 11:06:59,178] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 11:07:00,178] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 11:07:00,179] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 11:07:00,180] INFO [AddPartitionsListener on 2]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-28 11:25:36,942] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 11:25:36,942] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 11:25:36,942] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 11:25:36,942] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 11:25:36,942] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 11:25:36,942] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 11:25:37,148] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-28 11:25:37,149] INFO [Controller 2]: Initialized controller epoch to 97 and zk version 96 (kafka.controller.KafkaController)
[2016-04-28 11:25:37,150] INFO [Controller 2]: Controller 2 incremented epoch to 98 (kafka.controller.KafkaController)
[2016-04-28 11:25:37,150] DEBUG [Controller 2]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 11:25:37,157] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 11:25:37,157] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 11:25:37,157] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Controller 2]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Controller 2]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Controller 2]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-28 11:25:37,158] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-28 11:25:37,160] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:37,162] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:37,164] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:37,164] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-28 11:25:37,165] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 98 (kafka.controller.KafkaController)
[2016-04-28 11:25:37,165] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-28 11:25:37,165] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-28 11:25:37,165] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-28 11:25:40,362] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 11:25:40,366] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 11:25:40,366] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-28 11:25:40,366] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-28 11:25:40,366] INFO [Controller-2-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 11:25:40,367] INFO [Controller 2]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-28 11:25:40,367] INFO [Controller-2-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 11:25:40,367] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-28 11:25:40,367] INFO [Controller-2-to-broker-2-send-thread], Controller 2 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 11:25:40,367] INFO [Controller-2-to-broker-1-send-thread], Controller 2 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 11:25:40,369] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:40,369] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":76,"isr":[1,2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:40,369] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:76,ControllerEpoch:98), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:77,ControllerEpoch:95), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:77,ControllerEpoch:95)) (kafka.controller.PartitionStateMachine)
[2016-04-28 11:25:40,370] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 2 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:40,370] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":78,"isr":[2,1]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:40,370] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:76,ControllerEpoch:98), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:78,ControllerEpoch:98), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:77,ControllerEpoch:95)) (kafka.controller.PartitionStateMachine)
[2016-04-28 11:25:40,371] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 2 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:40,371] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":78,"isr":[2,1]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 11:25:40,371] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:76,ControllerEpoch:98), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:78,ControllerEpoch:98), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:78,ControllerEpoch:98)) (kafka.controller.PartitionStateMachine)
