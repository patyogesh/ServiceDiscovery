[2016-04-28 20:15:51,620] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 20:15:52,146] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 20:15:52,146] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 20:15:52,146] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 20:15:52,146] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 20:15:52,149] INFO [Controller-2-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,152] INFO [Controller-2-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,152] INFO [Controller-2-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,155] INFO [Controller-2-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,155] INFO [Controller-2-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,155] INFO [Controller-2-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,156] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 20:15:52,160] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-28 20:15:52,162] INFO [Controller 2]: Initialized controller epoch to 111 and zk version 110 (kafka.controller.KafkaController)
[2016-04-28 20:15:52,164] INFO [Controller 2]: Controller 2 incremented epoch to 112 (kafka.controller.KafkaController)
[2016-04-28 20:15:52,164] DEBUG [Controller 2]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 20:15:52,181] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 20:15:52,181] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 20:15:52,181] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-28 20:15:52,181] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-28 20:15:52,181] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-28 20:15:52,181] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-28 20:15:52,182] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-28 20:15:52,182] INFO [Controller 2]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-28 20:15:52,182] INFO [Controller 2]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 20:15:52,182] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 20:15:52,182] INFO [Controller 2]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-28 20:15:52,182] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-28 20:15:52,186] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:52,191] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:52,195] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:52,195] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-28 20:15:52,195] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 112 (kafka.controller.KafkaController)
[2016-04-28 20:15:52,195] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-28 20:15:52,195] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-28 20:15:52,196] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-28 20:15:52,827] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 20:15:52,828] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 20:15:52,840] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 20:15:52,840] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-28 20:15:52,840] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-28 20:15:52,841] INFO [Controller-2-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,842] INFO [Controller 2]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-28 20:15:52,842] INFO [Controller-2-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,843] INFO [Controller-2-to-broker-2-send-thread], Controller 2 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,843] INFO [Controller-2-to-broker-1-send-thread], Controller 2 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 20:15:52,843] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-28 20:15:52,846] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:52,846] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":90,"isr":[2,1]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:52,847] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:2,1,LeaderEpoch:90,ControllerEpoch:112), [pipeline,2] -> (Leader:2,ISR:1,2,LeaderEpoch:92,ControllerEpoch:111), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:92,ControllerEpoch:111)) (kafka.controller.PartitionStateMachine)
[2016-04-28 20:15:53,110] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 2 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:53,110] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":93,"isr":[1,2]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:53,111] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:2,1,LeaderEpoch:90,ControllerEpoch:112), [pipeline,2] -> (Leader:2,ISR:1,2,LeaderEpoch:93,ControllerEpoch:112), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:92,ControllerEpoch:111)) (kafka.controller.PartitionStateMachine)
[2016-04-28 20:15:53,114] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 2 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:53,114] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":93,"isr":[1,2]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 20:15:53,115] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:2,1,LeaderEpoch:90,ControllerEpoch:112), [pipeline,2] -> (Leader:2,ISR:1,2,LeaderEpoch:93,ControllerEpoch:112), [pipeline,0] -> (Leader:2,ISR:1,2,LeaderEpoch:93,ControllerEpoch:112)) (kafka.controller.PartitionStateMachine)
[2016-04-28 20:15:53,116] DEBUG [TopicChangeListener on Controller 2]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-28 20:15:53,117] INFO [TopicChangeListener on Controller 2]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-28 20:15:53,120] INFO [AddPartitionsListener on 2]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-28 20:15:53,125] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 20:15:53,132] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: , deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 20:15:57,460] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:15:57,460] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:15:57,460] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:15:57,460] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:15:57,460] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:15:57,460] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:20:57,448] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:20:57,448] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:20:57,448] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:20:57,449] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:20:57,449] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:20:57,449] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:25:57,438] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:25:57,438] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:25:57,438] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:25:57,438] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:25:57,438] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:25:57,438] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:30:57,426] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:30:57,426] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:30:57,426] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:30:57,426] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:30:57,426] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:30:57,426] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:35:57,418] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:35:57,418] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:35:57,418] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:35:57,418] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:35:57,418] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:35:57,418] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:40:57,406] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:40:57,407] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:40:57,407] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:40:57,407] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:40:57,407] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:40:57,407] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:45:57,395] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:45:57,395] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:45:57,395] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:45:57,395] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:45:57,395] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:45:57,395] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:50:57,385] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:50:57,386] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:50:57,386] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:50:57,386] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:50:57,386] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:50:57,386] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:55:57,379] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 20:55:57,379] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 20:55:57,379] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:55:57,379] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 20:55:57,379] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 20:55:57,379] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
