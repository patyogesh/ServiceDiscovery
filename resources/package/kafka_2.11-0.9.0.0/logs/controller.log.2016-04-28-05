[2016-04-28 06:26:51,713] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 06:26:51,722] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 06:26:51,722] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 06:26:51,722] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 06:26:51,722] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 06:26:51,722] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 06:26:51,727] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-28 06:26:51,729] INFO [Controller 2]: Initialized controller epoch to 84 and zk version 83 (kafka.controller.KafkaController)
[2016-04-28 06:26:51,729] INFO [Controller 2]: Controller 2 incremented epoch to 85 (kafka.controller.KafkaController)
[2016-04-28 06:26:51,730] DEBUG [Controller 2]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 06:26:51,790] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 06:26:51,790] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 06:26:51,790] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-28 06:26:51,790] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-28 06:26:51,790] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-28 06:26:51,790] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-28 06:26:51,791] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-28 06:26:51,791] INFO [Controller 2]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-28 06:26:51,791] INFO [Controller 2]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 06:26:51,791] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 06:26:51,791] INFO [Controller 2]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-28 06:26:51,791] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-28 06:26:51,796] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:51,801] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:51,806] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:51,807] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-28 06:26:51,807] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 85 (kafka.controller.KafkaController)
[2016-04-28 06:26:51,807] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-28 06:26:51,807] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-28 06:26:51,809] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-28 06:26:52,746] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 06:26:52,765] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 06:26:52,765] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-28 06:26:52,766] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-28 06:26:52,767] INFO [Controller-2-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 06:26:52,767] INFO [Controller 2]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-28 06:26:52,767] INFO [Controller-2-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 06:26:52,768] INFO [Controller-2-to-broker-1-send-thread], Controller 2 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 06:26:52,768] INFO [Controller-2-to-broker-2-send-thread], Controller 2 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 06:26:52,768] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-28 06:26:52,772] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:52,772] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":68,"isr":[2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:52,774] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:2,ISR:2,LeaderEpoch:68,ControllerEpoch:85), [pipeline,2] -> (Leader:2,ISR:2,LeaderEpoch:70,ControllerEpoch:84), [pipeline,0] -> (Leader:2,ISR:2,LeaderEpoch:70,ControllerEpoch:84)) (kafka.controller.PartitionStateMachine)
[2016-04-28 06:26:52,776] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:52,776] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":71,"isr":[2]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:52,777] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:2,ISR:2,LeaderEpoch:68,ControllerEpoch:85), [pipeline,2] -> (Leader:2,ISR:2,LeaderEpoch:71,ControllerEpoch:85), [pipeline,0] -> (Leader:2,ISR:2,LeaderEpoch:70,ControllerEpoch:84)) (kafka.controller.PartitionStateMachine)
[2016-04-28 06:26:52,779] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:52,779] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":71,"isr":[2]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 06:26:52,780] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:2,ISR:2,LeaderEpoch:68,ControllerEpoch:85), [pipeline,2] -> (Leader:2,ISR:2,LeaderEpoch:71,ControllerEpoch:85), [pipeline,0] -> (Leader:2,ISR:2,LeaderEpoch:71,ControllerEpoch:85)) (kafka.controller.PartitionStateMachine)
[2016-04-28 06:26:53,260] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 06:26:53,276] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(1, 2) for TopicAndPartitions:Set([pipeline,2], [pipeline,0], [pipeline,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 06:26:53,279] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 06:26:56,190] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 06:26:56,190] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 06:26:56,190] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 06:26:56,190] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 06:26:56,190] DEBUG [Controller 2]: topics not in preferred replica Map([pipeline,1] -> List(1, 2)) (kafka.controller.KafkaController)
[2016-04-28 06:26:56,191] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2016-04-28 06:26:56,191] INFO [Controller 2]: Starting preferred replica leader election for partitions [pipeline,1] (kafka.controller.KafkaController)
[2016-04-28 06:26:56,191] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [pipeline,1] (kafka.controller.PartitionStateMachine)
[2016-04-28 06:26:56,197] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 2 for partition [pipeline,1] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-04-28 06:26:56,198] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:2,1,LeaderEpoch:69,ControllerEpoch:85), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:71,ControllerEpoch:85), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:71,ControllerEpoch:85)) (kafka.controller.PartitionStateMachine)
[2016-04-28 06:26:56,204] INFO [Controller 2]: Partition [pipeline,1] completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2016-04-28 06:42:31,246] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 06:42:31,246] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 06:42:31,246] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 06:42:31,247] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 06:42:31,247] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 06:42:31,247] INFO [Controller-2-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 06:42:31,247] INFO [Controller-2-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 06:42:31,247] INFO [Controller-2-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 06:42:31,248] INFO [Controller-2-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 06:42:31,249] INFO [Controller-2-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 06:42:31,249] INFO [Controller-2-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 06:42:31,249] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 06:42:31,315] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 06:42:31,315] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 06:42:31,319] INFO [AddPartitionsListener on 2]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
