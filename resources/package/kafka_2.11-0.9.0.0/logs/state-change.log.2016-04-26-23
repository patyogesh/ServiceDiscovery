[2016-04-27 01:43:46,177] TRACE Controller 2 epoch 55 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:46,180] ERROR Controller 2 epoch 55 initiated state change for partition [pipeline,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 01:43:46,181] TRACE Controller 2 epoch 55 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:46,182] ERROR Controller 2 epoch 55 initiated state change for partition [pipeline,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 01:43:46,182] TRACE Controller 2 epoch 55 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:46,184] ERROR Controller 2 epoch 55 initiated state change for partition [pipeline,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 changed state of replica 2 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 changed state of replica 2 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:43:48,082] TRACE Controller 2 epoch 55 changed state of replica 1 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 changed state of replica 1 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 changed state of replica 1 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 0 (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 changed state of replica 2 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 0 (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 0 (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:43:48,083] TRACE Controller 2 epoch 55 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:1,2) correlation id 1 from controller 2 epoch 55 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 2 epoch 55 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 2 epoch 55 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:43:48,084] WARN Broker 2 ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 55 for partition [pipeline,1] since its associated leader epoch 39 is old. Current leader epoch is 39 (state.change.logger)
[2016-04-27 01:43:48,084] WARN Broker 2 ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 55 for partition [pipeline,2] since its associated leader epoch 42 is old. Current leader epoch is 42 (state.change.logger)
[2016-04-27 01:43:48,084] WARN Broker 2 ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 55 for partition [pipeline,0] since its associated leader epoch 42 is old. Current leader epoch is 42 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:39,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 2 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 2 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:42,ControllerEpoch:54),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 2 (state.change.logger)
[2016-04-27 01:43:48,084] TRACE Controller 2 epoch 55 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:43:48,085] TRACE Controller 2 epoch 55 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:43:48,085] TRACE Controller 2 epoch 55 elected leader 1 for Offline partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,085] TRACE Controller 2 epoch 55 changed partition [pipeline,1] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 01:43:48,085] TRACE Controller 2 epoch 55 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,086] TRACE Controller 2 epoch 55 elected leader 1 for Offline partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,087] TRACE Controller 2 epoch 55 changed partition [pipeline,2] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 01:43:48,087] TRACE Controller 2 epoch 55 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 elected leader 1 for Offline partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 changed partition [pipeline,0] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:1,2) correlation id 3 from controller 2 epoch 55 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 2 epoch 55 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Controller 2 epoch 55 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 2 epoch 55 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Broker 2 handling LeaderAndIsr request correlationId 3 from controller 2 epoch 55 starting the become-follower transition for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Broker 2 handling LeaderAndIsr request correlationId 3 from controller 2 epoch 55 starting the become-follower transition for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,088] TRACE Broker 2 handling LeaderAndIsr request correlationId 3 from controller 2 epoch 55 starting the become-follower transition for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,088] INFO Broker 2 skipped the become-follower state change after marking its partition as follower with correlation id 3 from controller 2 epoch 55 for partition [pipeline,2] since the new leader 1 is the same as the old leader (state.change.logger)
[2016-04-27 01:43:48,088] INFO Broker 2 skipped the become-follower state change after marking its partition as follower with correlation id 3 from controller 2 epoch 55 for partition [pipeline,0] since the new leader 1 is the same as the old leader (state.change.logger)
[2016-04-27 01:43:48,088] INFO Broker 2 skipped the become-follower state change after marking its partition as follower with correlation id 3 from controller 2 epoch 55 for partition [pipeline,1] since the new leader 1 is the same as the old leader (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Controller 2 epoch 55 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Broker 2 completed LeaderAndIsr request correlationId 3 from controller 2 epoch 55 for the become-follower transition for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Broker 2 completed LeaderAndIsr request correlationId 3 from controller 2 epoch 55 for the become-follower transition for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Broker 2 completed LeaderAndIsr request correlationId 3 from controller 2 epoch 55 for the become-follower transition for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Controller 2 epoch 55 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Controller 2 epoch 55 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 4 (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 4 (state.change.logger)
[2016-04-27 01:43:48,089] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 2 epoch 55 with correlation id 4 (state.change.logger)
[2016-04-27 01:43:48,090] TRACE Controller 2 epoch 55 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:53:34,377] TRACE Controller 2 epoch 55 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:35,167] ERROR Controller 2 epoch 55 encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":43,"isr":[1]}]. (state.change.logger)
[2016-04-27 01:53:35,167] ERROR Controller 2 epoch 55 initiated state change for partition [pipeline,2] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":43,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":43,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-27 01:53:35,170] TRACE Controller 2 epoch 55 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:35,174] ERROR Controller 2 epoch 55 encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":43,"isr":[1]}]. (state.change.logger)
[2016-04-27 01:53:35,174] ERROR Controller 2 epoch 55 initiated state change for partition [pipeline,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":43,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":43,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-27 01:53:35,213] TRACE Controller 2 epoch 56 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:35,221] ERROR Controller 2 epoch 56 initiated state change for partition [pipeline,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 01:53:35,221] TRACE Controller 2 epoch 56 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:35,230] ERROR Controller 2 epoch 56 initiated state change for partition [pipeline,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 01:53:35,230] TRACE Controller 2 epoch 56 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:35,234] ERROR Controller 2 epoch 56 initiated state change for partition [pipeline,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 01:53:36,321] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:53:36,321] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:53:36,321] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:53:36,322] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:53:36,322] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:53:36,322] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:53:36,323] TRACE Controller 2 epoch 56 changed state of replica 2 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 changed state of replica 2 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 changed state of replica 1 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 changed state of replica 1 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 changed state of replica 1 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 changed state of replica 2 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:53:36,324] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:53:36,325] TRACE Controller 2 epoch 56 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:53:36,325] TRACE Controller 2 epoch 56 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,325] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 0 (state.change.logger)
[2016-04-27 01:53:36,325] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 0 (state.change.logger)
[2016-04-27 01:53:36,325] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 0 (state.change.logger)
[2016-04-27 01:53:36,326] TRACE Controller 2 epoch 56 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:53:36,326] TRACE Controller 2 epoch 56 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:53:36,327] TRACE Controller 2 epoch 56 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:53:36,327] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:1,2) correlation id 1 from controller 2 epoch 56 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,327] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 2 epoch 56 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,327] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 2 epoch 56 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,327] WARN Broker 2 ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 56 for partition [pipeline,1] since its associated leader epoch 40 is old. Current leader epoch is 40 (state.change.logger)
[2016-04-27 01:53:36,328] WARN Broker 2 ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 56 for partition [pipeline,2] since its associated leader epoch 43 is old. Current leader epoch is 43 (state.change.logger)
[2016-04-27 01:53:36,328] WARN Broker 2 ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 56 for partition [pipeline,0] since its associated leader epoch 43 is old. Current leader epoch is 43 (state.change.logger)
[2016-04-27 01:53:36,328] TRACE Controller 2 epoch 56 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:53:36,328] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:40,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 2 (state.change.logger)
[2016-04-27 01:53:36,329] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 2 (state.change.logger)
[2016-04-27 01:53:36,329] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:43,ControllerEpoch:55),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 2 (state.change.logger)
[2016-04-27 01:53:36,329] TRACE Controller 2 epoch 56 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:53:36,330] TRACE Controller 2 epoch 56 elected leader 1 for Offline partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,330] TRACE Controller 2 epoch 56 changed partition [pipeline,1] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 01:53:36,330] TRACE Controller 2 epoch 56 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,334] TRACE Controller 2 epoch 56 elected leader 1 for Offline partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,334] TRACE Controller 2 epoch 56 changed partition [pipeline,2] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 01:53:36,334] TRACE Controller 2 epoch 56 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,340] TRACE Controller 2 epoch 56 elected leader 1 for Offline partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,340] TRACE Controller 2 epoch 56 changed partition [pipeline,0] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 01:53:36,340] TRACE Controller 2 epoch 56 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,340] TRACE Controller 2 epoch 56 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,340] TRACE Controller 2 epoch 56 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,340] TRACE Controller 2 epoch 56 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Controller 2 epoch 56 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Controller 2 epoch 56 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:1,2) correlation id 3 from controller 2 epoch 56 for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 2 epoch 56 for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Broker 2 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 2 epoch 56 for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Broker 2 handling LeaderAndIsr request correlationId 3 from controller 2 epoch 56 starting the become-follower transition for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Broker 2 handling LeaderAndIsr request correlationId 3 from controller 2 epoch 56 starting the become-follower transition for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,341] TRACE Broker 2 handling LeaderAndIsr request correlationId 3 from controller 2 epoch 56 starting the become-follower transition for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,341] INFO Broker 2 skipped the become-follower state change after marking its partition as follower with correlation id 3 from controller 2 epoch 56 for partition [pipeline,2] since the new leader 1 is the same as the old leader (state.change.logger)
[2016-04-27 01:53:36,341] INFO Broker 2 skipped the become-follower state change after marking its partition as follower with correlation id 3 from controller 2 epoch 56 for partition [pipeline,0] since the new leader 1 is the same as the old leader (state.change.logger)
[2016-04-27 01:53:36,341] INFO Broker 2 skipped the become-follower state change after marking its partition as follower with correlation id 3 from controller 2 epoch 56 for partition [pipeline,1] since the new leader 1 is the same as the old leader (state.change.logger)
[2016-04-27 01:53:36,342] TRACE Controller 2 epoch 56 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:53:36,343] TRACE Controller 2 epoch 56 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:53:36,343] TRACE Broker 2 completed LeaderAndIsr request correlationId 3 from controller 2 epoch 56 for the become-follower transition for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:36,343] TRACE Broker 2 completed LeaderAndIsr request correlationId 3 from controller 2 epoch 56 for the become-follower transition for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:36,343] TRACE Broker 2 completed LeaderAndIsr request correlationId 3 from controller 2 epoch 56 for the become-follower transition for partition [pipeline,1] (state.change.logger)
[2016-04-27 01:53:36,343] TRACE Controller 2 epoch 56 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:53:36,344] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 4 (state.change.logger)
[2016-04-27 01:53:36,344] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 4 (state.change.logger)
[2016-04-27 01:53:36,344] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 4 (state.change.logger)
[2016-04-27 01:53:36,344] TRACE Controller 2 epoch 56 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:53:36,378] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:53:36,378] TRACE Controller 2 epoch 56 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 01:53:36,378] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 2 epoch 56 with correlation id 5 (state.change.logger)
[2016-04-27 01:53:36,378] TRACE Controller 2 epoch 56 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 01:53:36,378] TRACE Controller 2 epoch 56 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 01:53:40,247] TRACE Controller 2 epoch 56 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 01:53:40,253] ERROR Controller 2 epoch 56 encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":44,"isr":[1]}]. (state.change.logger)
[2016-04-27 01:53:40,253] ERROR Controller 2 epoch 56 initiated state change for partition [pipeline,2] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":44,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":44,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-27 01:53:40,255] TRACE Controller 2 epoch 56 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 01:53:40,260] ERROR Controller 2 epoch 56 encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":44,"isr":[1]}]. (state.change.logger)
[2016-04-27 01:53:40,260] ERROR Controller 2 epoch 56 initiated state change for partition [pipeline,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":44,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":44,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
