[2016-04-28 05:03:16,665] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 05:03:16,673] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 05:03:16,673] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 05:03:16,675] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 05:03:16,675] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:03:16,678] INFO [Controller-2-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 05:03:16,678] INFO [Controller-2-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 05:03:16,678] INFO [Controller-2-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 05:03:16,681] INFO [Controller-2-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 05:03:16,681] INFO [Controller-2-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 05:03:16,681] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 05:03:16,682] INFO [Controller-2-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 05:03:16,807] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-28 05:03:16,808] INFO [Controller 2]: Initialized controller epoch to 80 and zk version 79 (kafka.controller.KafkaController)
[2016-04-28 05:03:16,809] INFO [Controller 2]: Controller 2 incremented epoch to 81 (kafka.controller.KafkaController)
[2016-04-28 05:03:16,810] DEBUG [Controller 2]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 05:03:16,845] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 05:03:16,845] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 05:03:16,845] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-28 05:03:16,845] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-28 05:03:16,845] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-28 05:03:16,845] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-28 05:03:16,848] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-28 05:03:16,848] INFO [Controller 2]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-28 05:03:16,848] INFO [Controller 2]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 05:03:16,848] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 05:03:16,848] INFO [Controller 2]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-28 05:03:16,848] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:03:16,855] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:16,865] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:16,874] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:16,874] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:03:16,875] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 81 (kafka.controller.KafkaController)
[2016-04-28 05:03:16,875] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-28 05:03:16,875] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-28 05:03:16,876] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-28 05:03:18,309] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:03:18,315] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer() for TopicAndPartitions:Set([pipeline,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:03:18,316] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:03:18,331] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:03:18,332] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-28 05:03:18,334] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-28 05:03:18,334] INFO [Controller-2-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 05:03:18,335] INFO [Controller-2-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 05:03:18,335] INFO [Controller 2]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-28 05:03:18,337] INFO [Controller-2-to-broker-1-send-thread], Controller 2 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 05:03:18,337] INFO [Controller-2-to-broker-2-send-thread], Controller 2 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 05:03:18,337] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:03:18,367] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:18,367] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":65,"isr":[1,2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:18,368] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:65,ControllerEpoch:81), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:66,ControllerEpoch:80), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:66,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:03:18,370] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:18,370] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":67,"isr":[1]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:18,372] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:65,ControllerEpoch:81), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:67,ControllerEpoch:81), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:66,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:03:18,373] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:18,373] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":67,"isr":[1]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:03:18,374] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:65,ControllerEpoch:81), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:67,ControllerEpoch:81), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:67,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:03:18,375] DEBUG [TopicChangeListener on Controller 2]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-28 05:03:18,375] INFO [TopicChangeListener on Controller 2]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-28 05:03:18,378] INFO [AddPartitionsListener on 2]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-28 05:03:18,382] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:03:18,383] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:03:18,388] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: , deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:03:18,389] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:03:21,878] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 05:03:21,878] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 05:03:21,878] DEBUG [Controller 2]: topics not in preferred replica Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-04-28 05:03:21,879] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-04-28 05:03:21,879] INFO [Controller 2]: Starting preferred replica leader election for partitions [pipeline,2] (kafka.controller.KafkaController)
[2016-04-28 05:03:21,879] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [pipeline,2] (kafka.controller.PartitionStateMachine)
[2016-04-28 05:03:21,882] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [pipeline,2] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-04-28 05:03:21,883] WARN [Controller 2]: Partition [pipeline,2] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-04-28 05:03:21,883] INFO [Controller 2]: Starting preferred replica leader election for partitions [pipeline,0] (kafka.controller.KafkaController)
[2016-04-28 05:03:21,883] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [pipeline,0] (kafka.controller.PartitionStateMachine)
[2016-04-28 05:03:21,885] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [pipeline,0] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-04-28 05:03:21,886] WARN [Controller 2]: Partition [pipeline,0] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-04-28 05:03:21,886] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 05:03:21,886] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 05:18:56,160] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 05:18:56,160] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 05:18:56,160] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 05:18:56,160] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 05:18:56,160] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:18:56,162] INFO [Controller-2-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 05:18:56,162] INFO [Controller-2-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 05:18:56,162] INFO [Controller-2-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 05:18:56,163] INFO [Controller-2-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 05:18:56,163] INFO [Controller-2-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 05:18:56,163] INFO [Controller-2-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 05:18:56,163] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 05:18:56,165] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-28 05:18:56,168] INFO [Controller 2]: Initialized controller epoch to 81 and zk version 80 (kafka.controller.KafkaController)
[2016-04-28 05:18:56,169] INFO [Controller 2]: Controller 2 incremented epoch to 82 (kafka.controller.KafkaController)
[2016-04-28 05:18:56,170] DEBUG [Controller 2]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 05:18:56,181] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 05:18:56,181] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 05:18:56,181] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-28 05:18:56,181] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-28 05:18:56,181] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-28 05:18:56,181] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-28 05:18:56,182] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-28 05:18:56,182] INFO [Controller 2]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-28 05:18:56,182] INFO [Controller 2]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 05:18:56,182] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 05:18:56,182] INFO [Controller 2]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-28 05:18:56,182] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:18:56,185] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:56,188] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:56,191] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:56,191] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:18:56,191] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 82 (kafka.controller.KafkaController)
[2016-04-28 05:18:56,191] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-28 05:18:56,192] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-28 05:18:56,193] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-28 05:18:58,028] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:18:58,031] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer() for TopicAndPartitions:Set([pipeline,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:18:58,032] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:18:58,044] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:18:58,044] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-28 05:18:58,044] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-28 05:18:58,045] INFO [Controller-2-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 05:18:58,045] INFO [Controller 2]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-28 05:18:58,046] INFO [Controller-2-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 05:18:58,047] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:18:58,047] INFO [Controller-2-to-broker-1-send-thread], Controller 2 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 05:18:58,047] INFO [Controller-2-to-broker-2-send-thread], Controller 2 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 05:18:58,051] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:58,051] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":66,"isr":[1,2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:58,051] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:66,ControllerEpoch:82), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:67,ControllerEpoch:81), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:67,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:18:58,053] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:58,053] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":68,"isr":[1]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:58,054] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:66,ControllerEpoch:82), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:68,ControllerEpoch:82), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:67,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:18:58,055] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:58,055] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":68,"isr":[1]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:18:58,056] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:66,ControllerEpoch:82), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:68,ControllerEpoch:82), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:68,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:18:58,058] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:19:01,195] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 05:19:01,196] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 05:19:01,196] DEBUG [Controller 2]: topics not in preferred replica Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-04-28 05:19:01,196] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-04-28 05:19:01,196] INFO [Controller 2]: Starting preferred replica leader election for partitions [pipeline,2] (kafka.controller.KafkaController)
[2016-04-28 05:19:01,196] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [pipeline,2] (kafka.controller.PartitionStateMachine)
[2016-04-28 05:19:01,199] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [pipeline,2] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-04-28 05:19:01,200] WARN [Controller 2]: Partition [pipeline,2] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-04-28 05:19:01,200] INFO [Controller 2]: Starting preferred replica leader election for partitions [pipeline,0] (kafka.controller.KafkaController)
[2016-04-28 05:19:01,200] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [pipeline,0] (kafka.controller.PartitionStateMachine)
[2016-04-28 05:19:01,205] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [pipeline,0] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-04-28 05:19:01,206] WARN [Controller 2]: Partition [pipeline,0] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-04-28 05:19:01,206] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 05:19:01,206] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 05:26:07,740] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 05:26:07,745] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 05:26:07,745] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 05:26:07,748] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 05:26:07,748] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:26:07,751] INFO [Controller-2-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 05:26:07,751] INFO [Controller-2-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 05:26:07,752] INFO [Controller-2-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 05:26:07,755] INFO [Controller-2-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 05:26:07,755] INFO [Controller-2-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 05:26:07,755] INFO [Controller-2-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 05:26:07,755] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 05:26:07,991] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-28 05:26:07,991] INFO [Controller 2]: Initialized controller epoch to 82 and zk version 81 (kafka.controller.KafkaController)
[2016-04-28 05:26:07,992] INFO [Controller 2]: Controller 2 incremented epoch to 83 (kafka.controller.KafkaController)
[2016-04-28 05:26:07,993] DEBUG [Controller 2]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 05:26:08,007] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 05:26:08,007] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-28 05:26:08,007] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-28 05:26:08,008] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-28 05:26:08,008] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-28 05:26:08,008] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-28 05:26:08,008] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-28 05:26:08,008] INFO [Controller 2]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-28 05:26:08,008] INFO [Controller 2]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 05:26:08,008] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-28 05:26:08,008] INFO [Controller 2]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-28 05:26:08,009] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:26:08,016] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:26:08,020] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:26:08,024] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:26:08,024] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:26:08,024] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 83 (kafka.controller.KafkaController)
[2016-04-28 05:26:08,025] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-28 05:26:08,025] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-28 05:26:08,026] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-28 05:26:13,033] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-28 05:26:13,034] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-28 05:26:13,034] DEBUG [Controller 2]: topics not in preferred replica Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-04-28 05:26:13,035] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-04-28 05:26:13,035] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-28 05:26:13,035] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-28 05:41:52,309] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:41:52,313] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer() for TopicAndPartitions:Set([pipeline,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:41:52,314] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:41:52,320] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: 2, deleted brokers: , all live brokers: 2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:41:52,320] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-28 05:41:52,322] INFO [Controller 2]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2016-04-28 05:41:52,324] INFO [Controller-2-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-28 05:41:52,325] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=2,Replica=2],[Topic=pipeline,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:41:52,325] INFO [Controller-2-to-broker-2-send-thread], Controller 2 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-28 05:41:52,329] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:41:52,329] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":67,"isr":[2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:41:52,329] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:2,ISR:2,LeaderEpoch:67,ControllerEpoch:83), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:68,ControllerEpoch:82), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:68,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:41:52,332] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas: 2 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:41:52,349] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Elect leader 2 from live brokers 2. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:41:52,350] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":69,"isr":[2]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:41:52,350] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:2,ISR:2,LeaderEpoch:67,ControllerEpoch:83), [pipeline,2] -> (Leader:2,ISR:2,LeaderEpoch:69,ControllerEpoch:83), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:68,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:41:52,353] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas: 2 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:41:52,353] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Elect leader 2 from live brokers 2. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:41:52,353] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":69,"isr":[2]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-28 05:41:52,353] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:2,ISR:2,LeaderEpoch:67,ControllerEpoch:83), [pipeline,2] -> (Leader:2,ISR:2,LeaderEpoch:69,ControllerEpoch:83), [pipeline,0] -> (Leader:2,ISR:2,LeaderEpoch:69,ControllerEpoch:83)) (kafka.controller.PartitionStateMachine)
[2016-04-28 05:41:52,356] DEBUG [TopicChangeListener on Controller 2]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-28 05:41:52,356] INFO [TopicChangeListener on Controller 2]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-28 05:41:52,358] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 05:41:52,358] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 05:41:52,358] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 05:41:52,360] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:41:52,363] WARN [Controller-2-to-broker-2-send-thread], Controller 2 epoch 83 fails to send request {controller_id=2,controller_epoch=83,partition_states=[{topic=pipeline,partition=1,controller_epoch=83,leader=2,leader_epoch=67,isr=[2],zk_version=121,replicas=[1,2]},{topic=pipeline,partition=0,controller_epoch=83,leader=2,leader_epoch=69,isr=[2],zk_version=85,replicas=[2,1]},{topic=pipeline,partition=2,controller_epoch=83,leader=2,leader_epoch=69,isr=[2],zk_version=87,replicas=[2,1]}],live_leaders=[{id=2,host=10.0.0.9,port=9093}]} to broker Node(2, 10.0.0.9, 9093). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.nio.channels.ClosedSelectorException
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:83)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)
	at org.apache.kafka.common.network.Selector.select(Selector.java:425)
	at org.apache.kafka.common.network.Selector.poll(Selector.java:254)
	at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:270)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:128)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-28 05:41:52,363] INFO [Controller-2-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-28 05:41:52,364] INFO [Controller-2-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-28 05:41:52,364] INFO [Controller-2-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-28 05:41:52,364] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 05:41:52,365] INFO [AddPartitionsListener on 2]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-28 05:41:52,369] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:41:52,369] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-28 05:41:52,369] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-04-28 05:41:52,369] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-28 05:41:52,369] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-28 05:41:52,369] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-28 05:41:52,369] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-04-28 05:41:52,375] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-28 05:41:52,375] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-28 05:41:52,381] INFO [AddPartitionsListener on 2]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-28 05:41:52,385] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
