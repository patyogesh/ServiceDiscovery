[2016-04-26 05:12:51,461] INFO [SessionExpirationListener on 1], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-26 05:12:51,462] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-04-26 05:12:51,462] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-26 05:12:51,462] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-26 05:12:51,462] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-26 05:12:52,149] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-26 05:12:52,149] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-26 05:12:52,149] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-26 05:12:52,152] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-26 05:12:52,153] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-26 05:12:52,153] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-26 05:12:52,153] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
[2016-04-26 05:12:52,165] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-26 05:12:52,165] INFO [Controller 1]: Initialized controller epoch to 20 and zk version 19 (kafka.controller.KafkaController)
[2016-04-26 05:12:52,166] INFO [Controller 1]: Controller 1 incremented epoch to 21 (kafka.controller.KafkaController)
[2016-04-26 05:12:52,166] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-26 05:12:52,177] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-26 05:12:52,177] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-26 05:12:52,177] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-26 05:12:52,177] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-26 05:12:52,177] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-26 05:12:52,177] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-26 05:12:52,177] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-26 05:12:52,177] INFO [Controller 1]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-26 05:12:52,178] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-26 05:12:52,178] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-26 05:12:52,178] INFO [Controller 1]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-26 05:12:52,178] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-26 05:12:52,181] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:52,183] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:52,186] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:52,186] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-26 05:12:52,187] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 21 (kafka.controller.KafkaController)
[2016-04-26 05:12:52,187] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-26 05:12:52,187] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-26 05:12:52,188] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-26 05:12:53,336] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-26 05:12:53,336] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 05:12:53,344] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 05:12:53,344] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-26 05:12:53,344] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-04-26 05:12:53,344] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-26 05:12:53,345] INFO [Controller 1]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2016-04-26 05:12:53,345] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-26 05:12:53,346] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=0,Replica=2],[Topic=pipeline,Partition=1,Replica=2],[Topic=pipeline,Partition=0,Replica=1],[Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-04-26 05:12:53,346] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-26 05:12:53,346] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-26 05:12:53,349] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 1,2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:53,349] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":16,"isr":[1,2]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:53,350] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:16,ControllerEpoch:21), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:17,ControllerEpoch:20), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:17,ControllerEpoch:20)) (kafka.controller.PartitionStateMachine)
[2016-04-26 05:12:53,351] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 2 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:53,351] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":18,"isr":[2,1]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:53,352] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:16,ControllerEpoch:21), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:18,ControllerEpoch:21), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:17,ControllerEpoch:20)) (kafka.controller.PartitionStateMachine)
[2016-04-26 05:12:53,353] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 2 from ISR 2,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:53,353] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":18,"isr":[2,1]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:12:53,354] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,2,LeaderEpoch:16,ControllerEpoch:21), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:18,ControllerEpoch:21), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:18,ControllerEpoch:21)) (kafka.controller.PartitionStateMachine)
[2016-04-26 05:12:53,355] DEBUG [TopicChangeListener on Controller 1]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-26 05:12:53,356] INFO [TopicChangeListener on Controller 1]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-26 05:12:53,358] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-26 05:12:53,360] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 05:12:53,363] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 05:12:57,454] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-26 05:12:57,455] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([pipeline,2] -> List(2, 1), [pipeline,0] -> List(2, 1)), 1 -> Map([pipeline,1] -> List(1, 2))) (kafka.controller.KafkaController)
[2016-04-26 05:12:57,455] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-26 05:12:57,455] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-04-26 05:12:57,455] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-26 05:12:57,455] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-04-26 05:28:27,152] INFO [SessionExpirationListener on 1], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-04-26 05:28:27,153] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-04-26 05:28:27,153] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-26 05:28:27,153] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-26 05:28:27,153] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-26 05:28:27,154] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-26 05:28:27,154] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-26 05:28:27,154] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-26 05:28:27,155] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-26 05:28:27,156] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-26 05:28:27,156] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-26 05:28:27,156] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
[2016-04-26 05:28:27,157] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2016-04-26 05:28:27,158] INFO [Controller 1]: Initialized controller epoch to 21 and zk version 20 (kafka.controller.KafkaController)
[2016-04-26 05:28:27,158] INFO [Controller 1]: Controller 1 incremented epoch to 22 (kafka.controller.KafkaController)
[2016-04-26 05:28:27,158] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-26 05:28:27,167] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-04-26 05:28:27,167] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-04-26 05:28:27,167] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-04-26 05:28:27,167] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-04-26 05:28:27,168] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-04-26 05:28:27,168] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-04-26 05:28:27,168] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-04-26 05:28:27,168] INFO [Controller 1]: List of topics ineligible for deletion: pipeline (kafka.controller.KafkaController)
[2016-04-26 05:28:27,168] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-26 05:28:27,168] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-04-26 05:28:27,168] INFO [Controller 1]: Current list of topics in the cluster: Set(pipeline) (kafka.controller.KafkaController)
[2016-04-26 05:28:27,168] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=pipeline,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=pipeline,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-04-26 05:28:27,170] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,172] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,174] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [pipeline,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,175] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([pipeline,1] -> OfflinePartition, [pipeline,2] -> OfflinePartition, [pipeline,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-04-26 05:28:27,175] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 22 (kafka.controller.KafkaController)
[2016-04-26 05:28:27,175] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-04-26 05:28:27,175] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-04-26 05:28:27,175] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-04-26 05:28:27,275] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-26 05:28:27,275] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 05:28:27,279] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 1, deleted brokers: , all live brokers: 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 05:28:27,279] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-04-26 05:28:27,280] INFO [Controller 1]: New broker startup callback for 1 (kafka.controller.KafkaController)
[2016-04-26 05:28:27,280] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-04-26 05:28:27,280] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=pipeline,Partition=1,Replica=1],[Topic=pipeline,Partition=2,Replica=1],[Topic=pipeline,Partition=0,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-04-26 05:28:27,281] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 10.0.0.9, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-26 05:28:27,283] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,1]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,283] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":17,"isr":[1]} for offline partition [pipeline,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,283] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,LeaderEpoch:17,ControllerEpoch:22), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:18,ControllerEpoch:21), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:18,ControllerEpoch:21)) (kafka.controller.PartitionStateMachine)
[2016-04-26 05:28:27,284] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,2]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,285] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":19,"isr":[1]} for offline partition [pipeline,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,285] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,LeaderEpoch:17,ControllerEpoch:22), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:19,ControllerEpoch:22), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:18,ControllerEpoch:21)) (kafka.controller.PartitionStateMachine)
[2016-04-26 05:28:27,286] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [pipeline,0]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,286] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":19,"isr":[1]} for offline partition [pipeline,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-04-26 05:28:27,287] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:1,ISR:1,LeaderEpoch:17,ControllerEpoch:22), [pipeline,2] -> (Leader:1,ISR:1,LeaderEpoch:19,ControllerEpoch:22), [pipeline,0] -> (Leader:1,ISR:1,LeaderEpoch:19,ControllerEpoch:22)) (kafka.controller.PartitionStateMachine)
[2016-04-26 05:28:27,288] DEBUG [TopicChangeListener on Controller 1]: Topic change listener fired for path /brokers/topics with children pipeline (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-26 05:28:27,288] INFO [TopicChangeListener on Controller 1]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-26 05:28:27,290] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"2":[2,1],"1":[1,2],"0":[2,1]}} for path /brokers/topics/pipeline (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-04-26 05:28:27,291] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 05:28:27,293] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: , all live brokers: 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-04-26 05:28:29,488] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-26 05:28:29,492] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(1) for TopicAndPartitions:Set([pipeline,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-04-26 05:28:29,493] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
