[2016-04-25 20:01:06,456] INFO [Controller 1]: Shutting down broker 1 (kafka.controller.KafkaController)
[2016-04-25 20:01:06,458] DEBUG [Controller 1]: All shutting down brokers: 1 (kafka.controller.KafkaController)
[2016-04-25 20:01:06,459] DEBUG [Controller 1]: Live brokers: 2 (kafka.controller.KafkaController)
[2016-04-25 20:01:06,463] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [pipeline,1] (kafka.controller.PartitionStateMachine)
[2016-04-25 20:01:06,470] DEBUG [ControlledShutdownLeaderSelector]: Partition [pipeline,1] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-04-25 20:01:06,471] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([pipeline,1] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:9), [pipeline,2] -> (Leader:2,ISR:2,1,LeaderEpoch:6,ControllerEpoch:9), [pipeline,0] -> (Leader:2,ISR:2,1,LeaderEpoch:6,ControllerEpoch:9)) (kafka.controller.PartitionStateMachine)
[2016-04-25 20:01:06,473] WARN [Controller-1-to-broker-1-send-thread], Controller 1 epoch 9 fails to send request {controller_id=1,controller_epoch=9,partition_states=[{topic=pipeline,partition=1,controller_epoch=9,leader=2,leader_epoch=6,isr=[2],zk_version=11,replicas=[1,2]}],live_leaders=[{id=2,host=10.0.0.9,port=9093}]} to broker Node(1, 10.0.0.9, 9092). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:06,473] WARN [Controller-1-to-broker-2-send-thread], Controller 1 epoch 9 fails to send request {controller_id=1,controller_epoch=9,partition_states=[{topic=pipeline,partition=1,controller_epoch=9,leader=2,leader_epoch=6,isr=[2],zk_version=11,replicas=[1,2]}],live_leaders=[{id=2,host=10.0.0.9,port=9093}]} to broker Node(2, 10.0.0.9, 9093). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:06,477] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-04-25 20:01:06,477] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=pipeline,Partition=2,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-04-25 20:01:06,478] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=pipeline,Partition=2,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-04-25 20:01:06,479] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1 for partition [pipeline,2]. (kafka.controller.KafkaController)
[2016-04-25 20:01:06,484] INFO [Controller 1]: New leader and ISR for partition [pipeline,2] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2016-04-25 20:01:06,485] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-04-25 20:01:06,485] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=pipeline,Partition=2,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-04-25 20:01:06,485] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-04-25 20:01:06,485] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=pipeline,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-04-25 20:01:06,485] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=pipeline,Partition=0,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-04-25 20:01:06,485] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1 for partition [pipeline,0]. (kafka.controller.KafkaController)
[2016-04-25 20:01:06,489] INFO [Controller 1]: New leader and ISR for partition [pipeline,0] is {"leader":2,"leader_epoch":7,"isr":[2]} (kafka.controller.KafkaController)
[2016-04-25 20:01:06,490] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-04-25 20:01:06,490] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=pipeline,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-04-25 20:01:06,491] TRACE [Controller 1]: All leaders = [pipeline,1] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:9),[pipeline,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:9),[pipeline,0] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:9) (kafka.controller.KafkaController)
[2016-04-25 20:01:06,781] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, 10.0.0.9, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-25 20:01:06,784] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 10.0.0.9, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 10.0.0.9, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:07,086] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 10.0.0.9, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 10.0.0.9, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:07,390] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 10.0.0.9, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 10.0.0.9, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:07,695] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 10.0.0.9, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 10.0.0.9, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:07,996] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 10.0.0.9, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 10.0.0.9, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:08,301] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 10.0.0.9, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 10.0.0.9, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:08,603] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 10.0.0.9, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 10.0.0.9, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-04-25 20:01:08,846] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-25 20:01:08,850] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(1, 2) for TopicAndPartitions:Set([pipeline,2], [pipeline,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-04-25 20:01:08,852] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-04-25 20:01:08,879] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-04-25 20:01:08,879] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-04-25 20:01:08,879] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-04-25 20:01:08,879] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-04-25 20:01:08,880] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-25 20:01:08,880] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-25 20:01:08,880] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-25 20:01:08,881] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-04-25 20:01:08,881] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-04-25 20:01:08,881] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-04-25 20:01:08,881] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
