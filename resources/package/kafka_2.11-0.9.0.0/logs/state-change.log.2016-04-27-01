[2016-04-27 04:09:21,766] TRACE Controller 1 epoch 57 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:21,778] ERROR Controller 1 epoch 57 initiated state change for partition [pipeline,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 04:09:21,781] TRACE Controller 1 epoch 57 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:21,787] ERROR Controller 1 epoch 57 initiated state change for partition [pipeline,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 04:09:21,788] TRACE Controller 1 epoch 57 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:21,794] ERROR Controller 1 epoch 57 initiated state change for partition [pipeline,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 04:09:23,248] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:09:23,248] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:09:23,248] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:09:23,251] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:09:23,251] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:09:23,251] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:09:23,252] TRACE Controller 1 epoch 57 changed state of replica 2 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:09:23,252] TRACE Controller 1 epoch 57 changed state of replica 2 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:09:23,253] TRACE Controller 1 epoch 57 changed state of replica 1 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:09:23,253] TRACE Controller 1 epoch 57 changed state of replica 1 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:09:23,253] TRACE Controller 1 epoch 57 changed state of replica 1 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:09:23,253] TRACE Controller 1 epoch 57 changed state of replica 2 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:09:23,253] TRACE Controller 1 epoch 57 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,253] TRACE Controller 1 epoch 57 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,253] TRACE Controller 1 epoch 57 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,253] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 0 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 0 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 0 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:09:23,254] TRACE Controller 1 epoch 57 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,255] TRACE Controller 1 epoch 57 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:09:23,256] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:1,2) correlation id 1 from controller 1 epoch 57 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,256] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 1 epoch 57 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,256] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 1 epoch 57 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,256] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 57 for partition [pipeline,1] since its associated leader epoch 41 is old. Current leader epoch is 41 (state.change.logger)
[2016-04-27 04:09:23,256] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 57 for partition [pipeline,2] since its associated leader epoch 44 is old. Current leader epoch is 44 (state.change.logger)
[2016-04-27 04:09:23,256] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 57 for partition [pipeline,0] since its associated leader epoch 44 is old. Current leader epoch is 44 (state.change.logger)
[2016-04-27 04:09:23,256] TRACE Controller 1 epoch 57 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:09:23,257] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:41,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 2 (state.change.logger)
[2016-04-27 04:09:23,257] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 2 (state.change.logger)
[2016-04-27 04:09:23,257] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:44,ControllerEpoch:56),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 2 (state.change.logger)
[2016-04-27 04:09:23,257] TRACE Controller 1 epoch 57 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:09:23,258] TRACE Controller 1 epoch 57 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:09:23,259] TRACE Controller 1 epoch 57 elected leader 1 for Offline partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,260] TRACE Controller 1 epoch 57 changed partition [pipeline,1] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 04:09:23,260] TRACE Controller 1 epoch 57 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,261] TRACE Controller 1 epoch 57 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:09:23,261] TRACE Controller 1 epoch 57 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:09:23,264] TRACE Controller 1 epoch 57 elected leader 1 for Offline partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,264] TRACE Controller 1 epoch 57 changed partition [pipeline,2] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 04:09:23,264] TRACE Controller 1 epoch 57 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 elected leader 1 for Offline partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 changed partition [pipeline,0] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:09:23,268] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:09:23,269] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:1,2) correlation id 3 from controller 1 epoch 57 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,269] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 1 epoch 57 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,269] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 1 epoch 57 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,270] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 57 starting the become-leader transition for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,270] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 57 starting the become-leader transition for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,270] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 57 starting the become-leader transition for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,271] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 57 for partition [pipeline,2] since it is already the leader for the partition. (state.change.logger)
[2016-04-27 04:09:23,271] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 57 for partition [pipeline,0] since it is already the leader for the partition. (state.change.logger)
[2016-04-27 04:09:23,271] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 57 for partition [pipeline,1] since it is already the leader for the partition. (state.change.logger)
[2016-04-27 04:09:23,271] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 57 for the become-leader transition for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:23,271] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 57 for the become-leader transition for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:23,271] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 57 for the become-leader transition for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:09:23,271] TRACE Controller 1 epoch 57 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:09:23,272] TRACE Controller 1 epoch 57 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:09:23,272] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 4 (state.change.logger)
[2016-04-27 04:09:23,273] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 4 (state.change.logger)
[2016-04-27 04:09:23,273] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 4 (state.change.logger)
[2016-04-27 04:09:23,273] TRACE Controller 1 epoch 57 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:09:23,273] TRACE Controller 1 epoch 57 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:09:23,922] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:09:23,922] TRACE Controller 1 epoch 57 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:09:23,923] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 57 with correlation id 5 (state.change.logger)
[2016-04-27 04:09:23,923] TRACE Controller 1 epoch 57 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:09:23,923] TRACE Controller 1 epoch 57 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:09:27,414] TRACE Controller 1 epoch 57 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:09:27,417] ERROR Controller 1 epoch 57 encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":45,"isr":[1]}]. (state.change.logger)
[2016-04-27 04:09:27,417] ERROR Controller 1 epoch 57 initiated state change for partition [pipeline,2] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":45,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":45,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-27 04:09:27,419] TRACE Controller 1 epoch 57 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:09:27,422] ERROR Controller 1 epoch 57 encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":45,"isr":[1]}]. (state.change.logger)
[2016-04-27 04:09:27,422] ERROR Controller 1 epoch 57 initiated state change for partition [pipeline,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":45,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":45,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-27 04:52:01,578] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:01,587] ERROR Controller 1 epoch 58 initiated state change for partition [pipeline,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 04:52:01,588] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:01,594] ERROR Controller 1 epoch 58 initiated state change for partition [pipeline,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 04:52:01,594] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:01,603] ERROR Controller 1 epoch 58 initiated state change for partition [pipeline,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pipeline,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:778)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:777)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:332)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:163)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1172)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1170)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1170)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:734)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-04-27 04:52:03,048] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:52:03,048] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:52:03,048] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:52:03,049] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:52:03,049] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:52:03,049] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:52:03,049] TRACE Controller 1 epoch 58 changed state of replica 2 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:52:03,049] TRACE Controller 1 epoch 58 changed state of replica 2 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:52:03,049] TRACE Controller 1 epoch 58 changed state of replica 1 for partition [pipeline,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:52:03,049] TRACE Controller 1 epoch 58 changed state of replica 1 for partition [pipeline,1] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 changed state of replica 1 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 changed state of replica 2 for partition [pipeline,2] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:52:03,050] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,051] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2016-04-27 04:52:03,051] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2016-04-27 04:52:03,051] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 0 (state.change.logger)
[2016-04-27 04:52:03,051] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:52:03,052] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:1,2) correlation id 1 from controller 1 epoch 58 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,052] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 1 epoch 58 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,053] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) correlation id 1 from controller 1 epoch 58 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,053] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 58 for partition [pipeline,1] since its associated leader epoch 42 is old. Current leader epoch is 42 (state.change.logger)
[2016-04-27 04:52:03,053] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 58 for partition [pipeline,2] since its associated leader epoch 45 is old. Current leader epoch is 45 (state.change.logger)
[2016-04-27 04:52:03,053] WARN Broker 1 ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 58 for partition [pipeline,0] since its associated leader epoch 45 is old. Current leader epoch is 45 (state.change.logger)
[2016-04-27 04:52:03,053] TRACE Controller 1 epoch 58 elected leader 1 for Offline partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,053] TRACE Controller 1 epoch 58 changed partition [pipeline,1] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 04:52:03,053] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,053] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:52:03,053] TRACE Controller 1 epoch 58 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:52:03,053] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:42,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2016-04-27 04:52:03,054] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2016-04-27 04:52:03,054] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:45,ControllerEpoch:57),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 2 (state.change.logger)
[2016-04-27 04:52:03,054] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:52:03,055] TRACE Controller 1 epoch 58 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=13},{topic=pipeline,partition=2,error_code=13},{topic=pipeline,partition=0,error_code=13}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:52:03,055] TRACE Controller 1 epoch 58 elected leader 1 for Offline partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,055] TRACE Controller 1 epoch 58 changed partition [pipeline,2] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 04:52:03,055] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,055] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 elected leader 1 for Offline partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 changed partition [pipeline,0] from OfflinePartition to OnlinePartition with leader 1 (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58) to broker 2 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58) to broker 2 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending become-follower LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58) to broker 2 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58) to broker 1 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58) to broker 1 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending become-leader LeaderAndIsr request (Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58) to broker 1 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58) to broker 2 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58) to broker 2 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58) to broker 1 for partition pipeline-0 (state.change.logger)
[2016-04-27 04:52:03,057] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58) to broker 1 for partition pipeline-2 (state.change.logger)
[2016-04-27 04:52:03,058] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58),ReplicationFactor:2),AllReplicas:1,2) correlation id 3 from controller 1 epoch 58 for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,058] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 1 epoch 58 for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,058] TRACE Broker 1 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58),ReplicationFactor:2),AllReplicas:2,1) correlation id 3 from controller 1 epoch 58 for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,058] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 58 starting the become-leader transition for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,058] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 58 starting the become-leader transition for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,059] TRACE Broker 1 handling LeaderAndIsr request correlationId 3 from controller 1 epoch 58 starting the become-leader transition for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,059] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 58 for partition [pipeline,2] since it is already the leader for the partition. (state.change.logger)
[2016-04-27 04:52:03,059] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 58 for partition [pipeline,0] since it is already the leader for the partition. (state.change.logger)
[2016-04-27 04:52:03,059] INFO Broker 1 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 1 epoch 58 for partition [pipeline,1] since it is already the leader for the partition. (state.change.logger)
[2016-04-27 04:52:03,059] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 58 for the become-leader transition for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:03,059] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 58 for the become-leader transition for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:03,059] TRACE Broker 1 completed LeaderAndIsr request correlationId 3 from controller 1 epoch 58 for the become-leader transition for partition [pipeline,1] (state.change.logger)
[2016-04-27 04:52:03,059] TRACE Controller 1 epoch 58 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:52:03,060] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 4 (state.change.logger)
[2016-04-27 04:52:03,060] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,2] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 4 (state.change.logger)
[2016-04-27 04:52:03,060] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,LeaderEpoch:46,ControllerEpoch:58),ReplicationFactor:2),AllReplicas:2,1) for partition [pipeline,0] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 4 (state.change.logger)
[2016-04-27 04:52:03,060] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:52:03,061] TRACE Controller 1 epoch 58 received response {error_code=0,partitions=[{topic=pipeline,partition=1,error_code=0},{topic=pipeline,partition=2,error_code=0},{topic=pipeline,partition=0,error_code=0}]} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:52:03,062] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:52:03,267] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58) to broker 2 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:52:03,267] TRACE Controller 1 epoch 58 sending UpdateMetadata request (Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58) to broker 1 for partition pipeline-1 (state.change.logger)
[2016-04-27 04:52:03,267] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:1,ISR:1,2,LeaderEpoch:43,ControllerEpoch:58),ReplicationFactor:2),AllReplicas:1,2) for partition [pipeline,1] in response to UpdateMetadata request sent by controller 1 epoch 58 with correlation id 5 (state.change.logger)
[2016-04-27 04:52:03,267] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker Node(1, 10.0.0.9, 9092) (state.change.logger)
[2016-04-27 04:52:03,268] TRACE Controller 1 epoch 58 received response {error_code=0} for a request sent to broker Node(2, 10.0.0.9, 9093) (state.change.logger)
[2016-04-27 04:52:07,555] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:52:07,557] ERROR Controller 1 epoch 58 encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}]. (state.change.logger)
[2016-04-27 04:52:07,557] ERROR Controller 1 epoch 58 initiated state change for partition [pipeline,2] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-27 04:52:07,559] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:52:07,560] ERROR Controller 1 epoch 58 encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}]. (state.change.logger)
[2016-04-27 04:52:07,560] ERROR Controller 1 epoch 58 initiated state change for partition [pipeline,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-27 04:57:07,546] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,2] (state.change.logger)
[2016-04-27 04:57:07,549] ERROR Controller 1 epoch 58 encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}]. (state.change.logger)
[2016-04-27 04:57:07,549] ERROR Controller 1 epoch 58 initiated state change for partition [pipeline,2] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,2] due to: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,2] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
[2016-04-27 04:57:07,550] TRACE Controller 1 epoch 58 started leader election for partition [pipeline,0] (state.change.logger)
[2016-04-27 04:57:07,556] ERROR Controller 1 epoch 58 encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}]. (state.change.logger)
[2016-04-27 04:57:07,556] ERROR Controller 1 epoch 58 initiated state change for partition [pipeline,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [pipeline,0] due to: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}].
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController.onPreferredReplicaElection(KafkaController.scala:662)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply$mcV$sp(KafkaController.scala:1225)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18$$anonfun$apply$5.apply(KafkaController.scala:1220)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:262)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1217)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4$$anonfun$apply$18.apply(KafkaController.scala:1215)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1215)
	at kafka.controller.KafkaController$$anonfun$kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance$4.apply(KafkaController.scala:1194)
	at scala.collection.immutable.Map$Map2.foreach(Map.scala:137)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$checkAndTriggerPartitionRebalance(KafkaController.scala:1194)
	at kafka.controller.KafkaController$$anonfun$onControllerFailover$1.apply$mcV$sp(KafkaController.scala:344)
	at kafka.utils.KafkaScheduler$$anonfun$1.apply$mcV$sp(KafkaScheduler.scala:110)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:60)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: Preferred replica 2 for partition [pipeline,0] is either not alive or not in the isr. Current leader and ISR: [{"leader":1,"leader_epoch":46,"isr":[1]}]
	at kafka.controller.PreferredReplicaPartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:159)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 31 more
