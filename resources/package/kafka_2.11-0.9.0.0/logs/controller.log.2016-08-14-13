[2016-08-14 13:13:35,357] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-08-14 13:13:35,357] DEBUG [Controller 0]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-08-14 13:16:06,576] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2016-08-14 13:26:23,139] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2016-08-14 13:26:25,165] INFO [Controller 1]: Controller starting up (kafka.controller.KafkaController)
[2016-08-14 13:26:25,205] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2016-08-14 13:26:25,209] INFO [Controller 1]: Controller 1 incremented epoch to 1 (kafka.controller.KafkaController)
[2016-08-14 13:26:25,210] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-08-14 13:26:25,222] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-08-14 13:26:25,223] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-08-14 13:26:25,223] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-08-14 13:26:25,225] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-08-14 13:26:25,225] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-08-14 13:26:25,226] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-08-14 13:26:25,228] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-08-14 13:26:25,230] INFO [Controller 1]: List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2016-08-14 13:26:25,232] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-08-14 13:26:25,233] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-08-14 13:26:25,236] INFO [Controller 1]: Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2016-08-14 13:26:25,243] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2016-08-14 13:26:25,249] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2016-08-14 13:26:25,249] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2016-08-14 13:26:25,250] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-08-14 13:26:25,251] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-08-14 13:26:25,256] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-08-14 13:26:25,257] INFO [Controller 1]: Controller startup complete (kafka.controller.KafkaController)
[2016-08-14 13:26:25,334] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-08-14 13:26:25,360] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 1, deleted brokers: , all live brokers: 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-08-14 13:26:25,370] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-08-14 13:26:25,382] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-08-14 13:26:25,383] INFO [Controller 1]: New broker startup callback for 1 (kafka.controller.KafkaController)
[2016-08-14 13:26:25,407] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, bhavneshs-mbp.hsd1.ca.comcast.net, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-08-14 13:26:30,264] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-08-14 13:26:30,266] DEBUG [Controller 1]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-08-14 13:31:30,262] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-08-14 13:31:30,263] DEBUG [Controller 1]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-08-14 13:36:30,262] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-08-14 13:36:30,262] DEBUG [Controller 1]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-08-14 13:41:30,258] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-08-14 13:41:30,258] DEBUG [Controller 1]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-08-14 13:46:30,255] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-08-14 13:46:30,255] DEBUG [Controller 1]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-08-14 13:51:30,242] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-08-14 13:51:30,242] DEBUG [Controller 1]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2016-08-14 13:56:30,234] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-08-14 13:56:30,234] DEBUG [Controller 1]: preferred replicas by broker Map() (kafka.controller.KafkaController)
